// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  email         String       @unique
  name          String
  password      String
  transactions  Transaction[]
  budgets       Budget[]
  categories    Category[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Transaction {
  id          String     @id @default(uuid())
  amount      Float
  description String
  date        DateTime   @default(now())
  type        String     // "INCOME" or "EXPENSE"
  userId      String
  categoryId  String
  user        User       @relation(fields: [userId], references: [id])
  category    Category   @relation(fields: [categoryId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id           String        @id @default(uuid())
  name         String
  type         String        // "INCOME" or "EXPENSE"
  color        String        // For UI representation
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  budgets      Budget[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Budget {
  id         String    @id @default(uuid())
  amount     Float
  month      DateTime
  userId     String
  categoryId String
  user       User      @relation(fields: [userId], references: [id])
  category   Category  @relation(fields: [categoryId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
